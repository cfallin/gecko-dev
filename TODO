- Productionize
  - General cleanup; reconstruction of patch stack
  - IC collection and cache pre-filling script
  - weval efficiency and cleanup
    - incremental builds / caching
- Optimizations
  - comparison to wasm32 JIT
  - look at register pressure a bit more and verify nothing to be done
  - JS function prologues?
- Rejected ideas:
  - known-bits / partial-constant
  - BBV
  - IC ABI: SIMD packing, all memory, ...

- hotspots
  - (x) interpreterICEntryFromPCOffset (~5% in Octane)
  - TypedArrayObject::length (~5%)
  - LengthGetterImpl (2.8%)
  - TypedArrayObject::getElementPure
  - NativeObject::create (0.58%)
  - TypedArrayObjectTemplate<short>::setElement (1.0%)
  - irregexp::RawMatch (0.91%)
  - ArrayBufferObject::flags (0.66%)
  - BaseScript::weval (0.81%) (out-of-line the slowpath?)
  - Value::setUnchecked (0.58%)

- other perf ideas
  - share some ICCtx? Rooted value registration? no RootedScript (use
    BaselineFrame)
  - PC for restarts: take base and offset; load entryPC from ctx
  - inline nursery alloc?
  - intrinsic to "bless" the ICCtx location ptr as a root so we don't
    keep rematerializing it